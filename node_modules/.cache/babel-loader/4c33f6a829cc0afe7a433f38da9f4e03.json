{"ast":null,"code":"var _jsxFileName = \"/Users/rohitrajan/Rohit/projects/react-coronasim/src/LineChart.js\";\nimport React from \"react\";\nimport styles from \"./LineChart.module.css\";\n\nfunction buildPolyLineString(points, xMultipier, yMultipier, maxXEntries) {\n  return points.slice(Math.max(points.length - maxXEntries, 0)).reduce((acc, current, i) => {\n    return acc.concat(`${i * xMultipier}, ${-(current * yMultipier)}`);\n  }, []).join(\" \");\n}\n\nexport default function LineChart({\n  width,\n  height,\n  xOffset = 10,\n  yOffset = 17,\n  data = [],\n  maxXEntries = 100\n}) {\n  const maxYPoint = height - 50;\n  const maxYRange = Math.max(maxYPoint, ...data.reduce((prev, {\n    points\n  }) => prev.concat(points), []));\n  const yMultipier = 1;\n  const xMultipier = 2.5;\n  const scaleY = maxYPoint / maxYRange;\n  return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"span\", {\n    className: styles.labelY,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 7\n    }\n  }, \"Population \\u2192\"), /*#__PURE__*/React.createElement(\"svg\", {\n    className: styles.lineChart,\n    width: width,\n    height: height,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"g\", {\n    transform: `scale(1, ${scaleY}), translate(0, ${(height - 30) / scaleY})`,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 9\n    }\n  }, data.map(({\n    points,\n    color\n  }, i) => /*#__PURE__*/React.createElement(\"g\", {\n    key: `line-${i}`,\n    transform: `translate(${xOffset + 5}, ${yMultipier + yOffset})`,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"polyline\", {\n    points: buildPolyLineString(points, xMultipier, yMultipier, maxXEntries),\n    stroke: color,\n    fill: \"transparent\",\n    strokeWidth: 2,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 15\n    }\n  }))))), /*#__PURE__*/React.createElement(\"span\", {\n    className: styles.labelX,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 7\n    }\n  }, \"Days since the first case \\u2192\"));\n}","map":{"version":3,"sources":["/Users/rohitrajan/Rohit/projects/react-coronasim/src/LineChart.js"],"names":["React","styles","buildPolyLineString","points","xMultipier","yMultipier","maxXEntries","slice","Math","max","length","reduce","acc","current","i","concat","join","LineChart","width","height","xOffset","yOffset","data","maxYPoint","maxYRange","prev","scaleY","labelY","lineChart","map","color","labelX"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AAEA,OAAOC,MAAP,MAAmB,wBAAnB;;AAEA,SAASC,mBAAT,CAA6BC,MAA7B,EAAqCC,UAArC,EAAiDC,UAAjD,EAA6DC,WAA7D,EAA0E;AACxE,SAAOH,MAAM,CACVI,KADI,CACEC,IAAI,CAACC,GAAL,CAASN,MAAM,CAACO,MAAP,GAAgBJ,WAAzB,EAAsC,CAAtC,CADF,EAEJK,MAFI,CAEG,CAACC,GAAD,EAAMC,OAAN,EAAeC,CAAf,KAAqB;AAC3B,WAAOF,GAAG,CAACG,MAAJ,CAAY,GAAED,CAAC,GAAGV,UAAW,KAAI,EAAES,OAAO,GAAGR,UAAZ,CAAwB,EAAzD,CAAP;AACD,GAJI,EAIF,EAJE,EAKJW,IALI,CAKC,GALD,CAAP;AAMD;;AAED,eAAe,SAASC,SAAT,CAAmB;AAChCC,EAAAA,KADgC;AAEhCC,EAAAA,MAFgC;AAGhCC,EAAAA,OAAO,GAAG,EAHsB;AAIhCC,EAAAA,OAAO,GAAG,EAJsB;AAKhCC,EAAAA,IAAI,GAAG,EALyB;AAMhChB,EAAAA,WAAW,GAAG;AANkB,CAAnB,EAOZ;AACD,QAAMiB,SAAS,GAAGJ,MAAM,GAAG,EAA3B;AACA,QAAMK,SAAS,GAAGhB,IAAI,CAACC,GAAL,CAChBc,SADgB,EAEhB,GAAGD,IAAI,CAACX,MAAL,CAAY,CAACc,IAAD,EAAO;AAAEtB,IAAAA;AAAF,GAAP,KAAsBsB,IAAI,CAACV,MAAL,CAAYZ,MAAZ,CAAlC,EAAuD,EAAvD,CAFa,CAAlB;AAKA,QAAME,UAAU,GAAG,CAAnB;AACA,QAAMD,UAAU,GAAG,GAAnB;AACA,QAAMsB,MAAM,GAAGH,SAAS,GAAGC,SAA3B;AAEA,sBACE,uDACE;AAAM,IAAA,SAAS,EAAEvB,MAAM,CAAC0B,MAAxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,yBADF,eAEE;AAAK,IAAA,SAAS,EAAE1B,MAAM,CAAC2B,SAAvB;AAAkC,IAAA,KAAK,EAAEV,KAAzC;AAAgD,IAAA,MAAM,EAAEC,MAAxD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AACE,IAAA,SAAS,EAAG,YAAWO,MAAO,mBAAkB,CAACP,MAAM,GAAG,EAAV,IAC9CO,MAAO,GAFX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAIGJ,IAAI,CAACO,GAAL,CAAS,CAAC;AAAE1B,IAAAA,MAAF;AAAU2B,IAAAA;AAAV,GAAD,EAAoBhB,CAApB,kBACR;AACE,IAAA,GAAG,EAAG,QAAOA,CAAE,EADjB;AAEE,IAAA,SAAS,EAAG,aAAYM,OAAO,GAAG,CAAE,KAAIf,UAAU,GAAGgB,OAAQ,GAF/D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAIE;AACE,IAAA,MAAM,EAAEnB,mBAAmB,CACzBC,MADyB,EAEzBC,UAFyB,EAGzBC,UAHyB,EAIzBC,WAJyB,CAD7B;AAOE,IAAA,MAAM,EAAEwB,KAPV;AAQE,IAAA,IAAI,EAAC,aARP;AASE,IAAA,WAAW,EAAE,CATf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAJF,CADD,CAJH,CADF,CAFF,eA2BE;AAAM,IAAA,SAAS,EAAE7B,MAAM,CAAC8B,MAAxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wCA3BF,CADF;AA+BD","sourcesContent":["import React from \"react\";\n\nimport styles from \"./LineChart.module.css\";\n\nfunction buildPolyLineString(points, xMultipier, yMultipier, maxXEntries) {\n  return points\n    .slice(Math.max(points.length - maxXEntries, 0))\n    .reduce((acc, current, i) => {\n      return acc.concat(`${i * xMultipier}, ${-(current * yMultipier)}`);\n    }, [])\n    .join(\" \");\n}\n\nexport default function LineChart({\n  width,\n  height,\n  xOffset = 10,\n  yOffset = 17,\n  data = [],\n  maxXEntries = 100\n}) {\n  const maxYPoint = height - 50;\n  const maxYRange = Math.max(\n    maxYPoint,\n    ...data.reduce((prev, { points }) => prev.concat(points), [])\n  );\n\n  const yMultipier = 1;\n  const xMultipier = 2.5;\n  const scaleY = maxYPoint / maxYRange;\n\n  return (\n    <>\n      <span className={styles.labelY}>Population →</span>\n      <svg className={styles.lineChart} width={width} height={height}>\n        <g\n          transform={`scale(1, ${scaleY}), translate(0, ${(height - 30) /\n            scaleY})`}\n        >\n          {data.map(({ points, color }, i) => (\n            <g\n              key={`line-${i}`}\n              transform={`translate(${xOffset + 5}, ${yMultipier + yOffset})`}\n            >\n              <polyline\n                points={buildPolyLineString(\n                  points,\n                  xMultipier,\n                  yMultipier,\n                  maxXEntries\n                )}\n                stroke={color}\n                fill=\"transparent\"\n                strokeWidth={2}\n              />\n            </g>\n          ))}\n        </g>\n      </svg>\n      <span className={styles.labelX}>Days since the first case →</span>\n    </>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}