{"ast":null,"code":"import _objectSpread from\"/Users/rohitrajan/Rohit/projects/coronasim/react-coronasim/af/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2\";import _classCallCheck from\"/Users/rohitrajan/Rohit/projects/coronasim/react-coronasim/af/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";import _createClass from\"/Users/rohitrajan/Rohit/projects/coronasim/react-coronasim/af/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";import _assertThisInitialized from\"/Users/rohitrajan/Rohit/projects/coronasim/react-coronasim/af/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/assertThisInitialized\";import _createSuper from\"/Users/rohitrajan/Rohit/projects/coronasim/react-coronasim/af/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createSuper\";import _inherits from\"/Users/rohitrajan/Rohit/projects/coronasim/react-coronasim/af/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";/* eslint-disable */import React,{Component}from\"react\";import{forceSimulation,forceLink,forceCollide}from\"d3-force\";import Node from\"./Node\";var Graph=/*#__PURE__*/function(_Component){_inherits(Graph,_Component);var _super=_createSuper(Graph);function Graph(props){var _this;_classCallCheck(this,Graph);_this=_super.call(this,props);_this.handleTick=_this.handleTick.bind(_assertThisInitialized(_this));_this.setCurrent=_this.setCurrent.bind(_assertThisInitialized(_this));_this.state={current:null,layout:props.nodes.reduce(function(prev,acc){return prev[acc.id]={x:0,y:0},prev;},{})};return _this;}_createClass(Graph,[{key:\"componentDidMount\",value:function componentDidMount(){}},{key:\"componentWillMount\",value:function componentWillMount(){this.runForceSimulation();this.simulation.on(\"tick\",this.handleTick);}},{key:\"componentWillUnmount\",value:function componentWillUnmount(){this.simulation.on(\"tick\",null);}},{key:\"componentWillReceiveProps\",value:function componentWillReceiveProps(nextProps){if(this.props.tick!==nextProps.tick){this.updateForceSimulation();}}},{key:\"updateForceSimulation\",value:function updateForceSimulation(){this.simulation.alpha(0.2).restart();this.simulation.nodes(this.props.nodes);this.simulation.force(\"link\").links(this.props.edges);}},{key:\"shouldComponentUpdate\",value:function shouldComponentUpdate(props,nextProps){return props.tick!==nextProps.tick;}},{key:\"runForceSimulation\",value:function runForceSimulation(){var _this$props=this.props,nodes=_this$props.nodes,edges=_this$props.edges;var simulation=this.simulation=forceSimulation(nodes).force(\"link\",forceLink().id(function(node){return node.id;})).force(\"collide\",forceCollide(function(){return 1;}).iterations(1).radius(9));simulation.force(\"link\").links(edges).distance(25);}},{key:\"handleTick\",value:function handleTick(){var simulation=this.simulation;var layout=this.state.layout;var updates={};simulation.nodes().map(function(node){updates[node.id]=node;});this.setState({layout:_objectSpread({},layout,{},updates)});}},{key:\"setCurrent\",value:function setCurrent(nodeId){var _this2=this;return function(){_this2.setState({current:nodeId});};}},{key:\"render\",value:function render(){var _this3=this;var _this$props2=this.props,nodes=_this$props2.nodes,edges=_this$props2.edges,width=_this$props2.width,height=_this$props2.height,onNodeClick=_this$props2.onNodeClick;var _this$state=this.state,layout=_this$state.layout,current=_this$state.current;return/*#__PURE__*/React.createElement(\"svg\",{width:width,ref:function ref(_ref){return _this3.svgRef=_ref;},height:height,style:{shapeRendering:\"geometricPrecision\"}},nodes.map(function(node,index){return/*#__PURE__*/React.createElement(Node,Object.assign({key:index,node:node,layout:layout,current:current,width:width,height:height,onNodeClick:onNodeClick},node));}));}}]);return Graph;}(Component);export{Graph as default};Graph.defaultProps={width:900,height:600,nodes:[],edges:[]};","map":{"version":3,"sources":["/Users/rohitrajan/Rohit/projects/coronasim/react-coronasim/af/src/Graph.js"],"names":["React","Component","forceSimulation","forceLink","forceCollide","Node","Graph","props","handleTick","bind","setCurrent","state","current","layout","nodes","reduce","prev","acc","id","x","y","runForceSimulation","simulation","on","nextProps","tick","updateForceSimulation","alpha","restart","force","links","edges","node","iterations","radius","distance","updates","map","setState","nodeId","width","height","onNodeClick","ref","svgRef","shapeRendering","index","defaultProps"],"mappings":"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","sourcesContent":["/* eslint-disable */\nimport React, { Component } from \"react\";\n\nimport {\n  forceSimulation,\n  forceLink,\n  forceCollide\n} from \"d3-force\";\n\nimport Node from \"./Node\";\n\nexport default class Graph extends Component {\n  constructor(props) {\n    super(props);\n\n    this.handleTick = this.handleTick.bind(this);\n    this.setCurrent = this.setCurrent.bind(this);\n\n    this.state = {\n      current: null,\n      layout: props.nodes.reduce(\n        (prev, acc) => (\n          (prev[acc.id] = {\n            x: 0,\n            y: 0\n          }),\n          prev\n        ),\n        {}\n      )\n    };\n  }\n\n  componentDidMount() {}\n\n  componentWillMount() {\n    this.runForceSimulation();\n\n    this.simulation.on(\"tick\", this.handleTick);\n  }\n\n  componentWillUnmount() {\n    this.simulation.on(\"tick\", null);\n  }\n\n  componentWillReceiveProps(nextProps) {\n    if (this.props.tick !== nextProps.tick) {\n      this.updateForceSimulation();\n    }\n  }\n\n  updateForceSimulation() {\n    this.simulation.alpha(0.2).restart();\n    this.simulation.nodes(this.props.nodes);\n    this.simulation.force(\"link\").links(this.props.edges);\n  }\n\n  shouldComponentUpdate(props, nextProps) {\n    return props.tick !== nextProps.tick;\n  }\n\n  runForceSimulation() {\n    const { nodes, edges } = this.props;\n\n    const simulation = (this.simulation = forceSimulation(nodes)\n      .force(\n        \"link\",\n        forceLink().id(node => node.id)\n      )\n      .force(\n        \"collide\",\n        forceCollide(() => 1)\n          .iterations(1)\n          .radius(9)\n      ));\n\n    simulation\n      .force(\"link\")\n      .links(edges)\n      .distance(25);\n  }\n\n  handleTick() {\n    const { simulation } = this;\n    const { layout } = this.state;\n    let updates = {};\n\n    simulation.nodes().map(node => {\n      updates[node.id] = node;\n    });\n\n    this.setState({\n      layout: {\n        ...layout,\n        ...updates\n      }\n    });\n  }\n\n  setCurrent(nodeId) {\n    return () => {\n      this.setState({\n        current: nodeId\n      });\n    };\n  }\n\n  render() {\n    const { nodes, edges, width, height, onNodeClick } = this.props;\n    const { layout, current } = this.state;\n    return (\n      <svg\n        width={width}\n        ref={ref => (this.svgRef = ref)}\n        height={height}\n        style={{\n          shapeRendering: \"geometricPrecision\"\n        }}\n      >\n        {nodes.map((node, index) => (\n          <Node\n            key={index}\n            node={node}\n            layout={layout}\n            current={current}\n            width={width}\n            height={height}\n            onNodeClick={onNodeClick}\n            {...node}\n          />\n        ))}\n      </svg>\n    );\n  }\n}\n\nGraph.defaultProps = {\n  width: 900,\n  height: 600,\n  nodes: [],\n  edges: []\n};\n"]},"metadata":{},"sourceType":"module"}